<!-- Build file for compiling, deploying and testing PlaceBooks webapp -->

<project default="install" basedir=".">

	<!-- Set catalina.home, hamcrest.home and junit.home in build.properties -->
	<property file="build.properties" />
	
	<property name="warfile.dir" value="build" />
	<property name="war.dir" value="war" />
	<property name="classes.dir" value="${war.dir}/WEB-INF/classes" />
	<property name="lib.dir" value="${war.dir}/WEB-INF/lib" />
	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="javadoc.dir" value="docs/api" />
	<property name="basepackage.name" value="placebooks" />
	
	<!-- Configure the custom Ant tasks for the Manager application -->
  	<taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask"/>
  	<taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask"/>
  	<taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask"/>

	<path id="classpath">
  		<fileset dir="${lib.dir}">
    		<include name="*.jar"/>
  		</fileset>
		<fileset dir="${catalina.home}">
			<include name="*.jar"/>
		</fileset>
		<pathelement path="${java.class.path}" />
		<pathelement path="${hamcrest.home}" />
		<pathelement path="${junit.home}" />
	</path>

	<path id="classpath.enhance">
		<path refid="classpath"/>
		<pathelement path="${classes.dir}" />
    </path>

	<path id="classpath.gwt">
		<path path="${src.dir}"/>
		<pathelement path="lib/gwt-user.jar" />
		<pathelement path="lib/gwt-dev.jar" />	
    </path>
	
	<target name="makedirs">
		<mkdir dir="${warfile.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${classes.dir}/META-INF" />
		<mkdir dir="${javadoc.dir}" />
	</target>

	<target name="compile" depends="makedirs"
			description="Compile classes into web archive dir">
		<javac destdir="${classes.dir}" debug="on" deprecation="on" 
			   includeAntRuntime="no">
			<src path="${src.dir}" />
			<compilerarg value="-Xlint:unchecked" />
			<classpath refid="classpath"/>
		</javac>
	</target>

	<target name="compile-gwt">
		<java classpathref="classpath.gwt" failonerror="true" fork="true"
	        classname="com.google.gwt.dev.Compiler"> 
	        <arg line="-war ${war.dir}"/> 
	        <arg line="placebooks.PlaceBookEditor"/> 
		</java> 
	</target>
	
	<target name="compile-test" depends="compile"
			description="Compile test classes">
		<javac destdir="${classes.dir}" debug="on" deprecation="on" 
			   includeAntRuntime="no">
			<src path="${test.dir}" />
			<compilerarg value="-Xlint:unchecked" />
			<classpath refid="classpath"/>
		</javac>
	</target>

	<target name="staging" depends="makedirs" 
			description="Stage config + META-INF files to classes dir">
		<copy todir="${classes.dir}/META-INF/">
			<fileset dir="${src.dir}/META-INF" />
		</copy>
		<copy file="${src.dir}/log4j.properties" todir="${classes.dir}" />
		<copy file="${src.dir}/placebooks.properties" todir="${classes.dir}" />
	</target>

	<target name="war" depends="compile,enhance,staging"
			description="Create the web archive file">
		<jar jarfile="${warfile.dir}/${basepackage.name}.war" 
			 basedir="${war.dir}">
			<include name="**/*" />
		</jar>
	</target>

	<target name="test" depends="compile-test,enhance,staging" 
			description="JUnit testing">
		<junit fork="yes" haltonfailure="yes" showoutput="yes">
			<classpath>
				<path refid="classpath" />
				<pathelement path="${classes.dir}" />
			</classpath>
      		<formatter type="brief" usefile="false" />
      		<test name="placebooks.controller.UserTest" />
			<test name="placebooks.controller.PlaceBookTests" />
    	</junit>
	</target>

	<taskdef name="nucleusenhancer"
             classpathref="classpath.enhance"
             classname="org.datanucleus.enhancer.tools.EnhancerTask" />

	<target name="enhance" depends="compile">
 
        <nucleusenhancer classpathref="classpath.enhance" 
						 dir="${basedir}/${classes.dir}" 
						 checkonly="false" filesuffixes="class" 
						 failonerror="true" verbose="true">
			<jvmarg line="-Dlog4j.configuration=log4j.properties" />
		</nucleusenhancer>

    </target>

	<target name="docs" depends="makedirs">
		<javadoc sourcepath="${src.dir}"
				 defaultexcludes="yes" destdir="${javadoc.dir}"
				 author="true" version="true" use="true"
           	 	windowtitle="PlaceBooks API documentation">
			<doctitle>
				<![CDATA[<h1>PlaceBooks API documentation</h1>]]>
			</doctitle>
			<fileset dir="${src.dir}" defaultexcludes="yes">
	            <include name="**/*.java"/>
        	</fileset>
		</javadoc>
	</target>

	<target name="initdb" depends="compile,enhance">
        <java classname="placebooks.utils.InitializeDatabase">
			<classpath>
				<path refid="classpath" />
				<pathelement path="${classes.dir}" />
			</classpath>
		</java>
    </target>

  	<target name="install" depends="war"
   			description="Install application to servlet container">
		<deploy url="${manager.url}" username="${manager.username}"
       			password="${manager.password}" path="/${basepackage.name}"
       			war="file:${basedir}/${warfile.dir}/${basepackage.name}.war" />
  	</target>

	<target name="uninstall"
   			description="Remove application on servlet container">
	    <undeploy url="${manager.url}" username="${manager.username}"
		          password="${manager.password}" path="/${basepackage.name}"/>
  	</target>


 	<target name="reload" depends="war"
   			description="Reload application on servlet container">

    	<reload url="${manager.url}" username="${manager.username}"
       			password="${manager.password}" path="/${basepackage.name}"/>
  	</target>

	<target name="clean" description="Clean compiled classes">
		<delete includeemptydirs="true">
    		<fileset dir="${classes.dir}" includes="**/*" />
		</delete>
		<delete file="datanucleus.log"/>
	</target>

	<target name="clean-dist" description="Clean web archive file">
		<delete file="${warfile.dir}/${basepackage.name}.war" />
	</target>

	<target name="clean-docs" description="Clean API documentation">
		<delete includeemptydirs="true">
    		<fileset dir="${javadoc.dir}" includes="**/*" />
		</delete>
	</target>

	<target name="clean-all" description="Clean everything" 
			depends="clean,clean-dist">
	</target>

	<target name="reinstall" description="Uninstalls and reinstalls project"
		    depends="uninstall,install" />

</project>
